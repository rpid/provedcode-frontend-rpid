-- liquibase formatted sql
-- changeset dennis:1

drop table if exists authority cascade;

CREATE TABLE authority
(
    id        BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    authority VARCHAR(20)                             NOT NULL,
    CONSTRAINT pk_authority PRIMARY KEY (id)
);

drop table if exists talent cascade;
CREATE TABLE talent
(
    id             BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    first_name     VARCHAR(20),
    last_name      VARCHAR(20),
    specialization VARCHAR(30),
    image          VARCHAR(300),
    CONSTRAINT pk_talent PRIMARY KEY (id)
);

drop table if exists talent_attached_file cascade;
CREATE TABLE talent_attached_file
(
    id            BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    talent_id     BIGINT                                  NOT NULL,
    attached_file VARCHAR(100),
    CONSTRAINT pk_talent_attached_file PRIMARY KEY (id)
);

drop table if exists talent_contact cascade;
CREATE TABLE talent_contact
(
    id        BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    talent_id BIGINT                                  NOT NULL,
    contact   VARCHAR(255),
    CONSTRAINT pk_talent_contact PRIMARY KEY (id)
);

drop table if exists talent_description cascade;
CREATE TABLE talent_description
(
    id            BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    talent_id     BIGINT                                  NOT NULL,
    bio           VARCHAR(255),
    addition_info VARCHAR(255),
    CONSTRAINT pk_talent_description PRIMARY KEY (id)
);

drop table if exists talent_link cascade;
CREATE TABLE talent_link
(
    id        BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    talent_id BIGINT                                  NOT NULL,
    link      VARCHAR(255),
    CONSTRAINT pk_talent_link PRIMARY KEY (id)
);

drop table if exists talent_proofs cascade;
CREATE TABLE talent_proofs
(
    id        BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    talent_id BIGINT                                  NOT NULL,
    link      VARCHAR(100),
    text      VARCHAR(255),
    status    VARCHAR(20)                             NOT NULL,
    created   TIMESTAMP,
    CONSTRAINT pk_talent_proofs PRIMARY KEY (id)
);

drop table if exists talent_talents cascade;
CREATE TABLE talent_talents
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    talent_id   BIGINT                                  NOT NULL,
    talent_name VARCHAR(255),
    CONSTRAINT pk_talent_talents PRIMARY KEY (id)
);

drop table if exists user_authorities cascade;
CREATE TABLE user_authorities
(
    authority_id BIGINT NOT NULL,
    user_id      BIGINT NOT NULL,
    CONSTRAINT pk_user_authorities PRIMARY KEY (authority_id, user_id)
);

drop table if exists user_info cascade;
CREATE TABLE user_info
(
    id        BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    talent_id BIGINT                                  NOT NULL,
    login     VARCHAR(100)                            NOT NULL,
    password  VARCHAR(255)                            NOT NULL,
    CONSTRAINT pk_user_info PRIMARY KEY (id)
);


drop table if exists kudos cascade;
CREATE TABLE kudos
(
    id        BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    talent_id BIGINT,
    proof_id  BIGINT,
    CONSTRAINT pk_kudos PRIMARY KEY (id)
);


ALTER TABLE talent_attached_file
    ADD CONSTRAINT FK_TALENT_ATTACHED_FILE_ON_TALENT FOREIGN KEY (talent_id) REFERENCES talent (id);
ALTER TABLE talent_contact
    ADD CONSTRAINT FK_TALENT_CONTACT_ON_TALENT FOREIGN KEY (talent_id) REFERENCES talent (id);
ALTER TABLE talent_description
    ADD CONSTRAINT FK_TALENT_DESCRIPTION_ON_TALENT FOREIGN KEY (talent_id) REFERENCES talent (id);
ALTER TABLE talent_link
    ADD CONSTRAINT FK_TALENT_LINK_ON_TALENT FOREIGN KEY (talent_id) REFERENCES talent (id);
ALTER TABLE talent_proofs
    ADD CONSTRAINT FK_TALENT_PROOFS_ON_TALENT FOREIGN KEY (talent_id) REFERENCES talent (id);
ALTER TABLE talent_talents
    ADD CONSTRAINT FK_TALENT_TALENTS_ON_TALENT FOREIGN KEY (talent_id) REFERENCES talent (id);
ALTER TABLE user_info
    ADD CONSTRAINT FK_USER_INFO_ON_TALENT FOREIGN KEY (talent_id) REFERENCES talent (id);
ALTER TABLE user_authorities
    ADD CONSTRAINT fk_useaut_on_authority FOREIGN KEY (authority_id) REFERENCES authority (id);
ALTER TABLE user_authorities
    ADD CONSTRAINT fk_useaut_on_user_info FOREIGN KEY (user_id) REFERENCES user_info (id);
ALTER TABLE kudos
    ADD CONSTRAINT FK_KUDOS_ON_PROOF FOREIGN KEY (proof_id) REFERENCES talent_proofs (id);
ALTER TABLE kudos
    ADD CONSTRAINT FK_KUDOS_ON_TALENT FOREIGN KEY (talent_id) REFERENCES talent (id);